// <auto-generated />
using System;
using LEApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LEApi.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230424105450_PersonsAndCards")]
    partial class PersonsAndCards
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("LEApi.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LEApi.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("Audience")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LastUpdateById")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdateById");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("LEApi.Entities.PersonsCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Audience")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LastUpdateById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdateById");

                    b.ToTable("PersonsCards");
                });

            modelBuilder.Entity("PersonPersonsCard", b =>
                {
                    b.Property<int>("PersonsCardsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonsCardsId", "PersonsId");

                    b.HasIndex("PersonsId");

                    b.ToTable("PersonPersonsCard");
                });

            modelBuilder.Entity("LEApi.Entities.Person", b =>
                {
                    b.HasOne("LEApi.Entities.AppUser", "LastUpdateBy")
                        .WithMany()
                        .HasForeignKey("LastUpdateById");

                    b.Navigation("LastUpdateBy");
                });

            modelBuilder.Entity("LEApi.Entities.PersonsCard", b =>
                {
                    b.HasOne("LEApi.Entities.AppUser", "LastUpdateBy")
                        .WithMany()
                        .HasForeignKey("LastUpdateById");

                    b.Navigation("LastUpdateBy");
                });

            modelBuilder.Entity("PersonPersonsCard", b =>
                {
                    b.HasOne("LEApi.Entities.PersonsCard", null)
                        .WithMany()
                        .HasForeignKey("PersonsCardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LEApi.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
